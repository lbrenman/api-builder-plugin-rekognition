flow-nodes:
  rekognition:
    name: Rekognition
    icon: icon.png
    description: Rekognition image analysis.
    category: AI
    methods:
      detectLabels: # This same key is used in `actions.js`
        name: Detect Labels
        description: Detects objects in an image.
        parameters:
          Image:
            name: Image
            description: Base64 encoded image.
            required: true
            initialType: string
            schema:
              type: string
        # "Next" (next) output
        returns:
          name: Next
          description: The operation was successful.
          context: $.detectlabelsoutput
          schema:
            type: object
            properties:
              LabelModelVersion:
                type: string
                example: 2.0
              Labels:
                type: array
                items:
                  type: object
                  properties:
                    Confidence:
                      type: number
                      example: 57.1234
                    Name:
                      type: string
                      example: car
                    Parents:
                      type: array
                      items:
                        type: object
                        properties:
                          Name:
                            type: string
                            example: vehicle
                    Instances:
                      type: array
                      items:
                        type: object
                        properties:
                          Confidence:
                            type: number
                            example: 57.1234
                          BoundingBox:
                            type: object
                            properties:
                              Height:
                                type: number
                                example: 0.4260041415691376
                              Left:
                                type: number
                                example: 0.044332683086395264
                              Top:
                                type: number
                                example: 0.37117668986320496
                              Width:
                                type: number
                                example: 0.9095886945724487
        # "Error" (error) output
        throws:
          name: Error
          description: An unexpected error was encountered.
          context: $.detectlabelserror
          schema:
            type: object
            properties:
              message:
                type: string
      detectText: # This same key is used in `actions.js`
        name: Detect Text
        description: Detects text in an image.
        parameters:
          Image:
            name: Image
            description: Base64 encoded image.
            required: true
            initialType: string
            schema:
              type: string
        # "Next" (next) output
        returns:
          name: Next
          description: The operation was successful.
          context: $.detecttextoutput
          schema:
            type: object
            properties:
              TextModelVersion:
                type: string
                example: 3.0
              TextDetections:
                type: array
                items:
                  type: object
                  properties:
                    DetectedText:
                      type: string
                      example: CREATE
                    Type:
                      type: string
                      enum:
                      - LINE
                      - WORD
                    Id:
                      type: number
                      example: 0
                    Confidence:
                      type: number
                      example: 100
                    ParentId:
                      type: number
                      example: 0
                    Geometry:
                      type: object
                      properties:
                        BoundingBox:
                          type: object
                          properties:
                            Height:
                              type: number
                              example: 0.4260041415691376
                            Left:
                              type: number
                              example: 0.044332683086395264
                            Top:
                              type: number
                              example: 0.37117668986320496
                            Width:
                              type: number
                              example: 0.9095886945724487
                          Polygon: array
                          items:
                            type: object
                            properties:
                              X:
                                type: number
                                example: 0.2593750059604645
                              Y:
                                type: number
                                example: 0.3361110985279083
        # "Error" (error) output
        throws:
          name: Error
          description: An unexpected error was encountered.
          context: $.detecttexterror
          schema:
            type: object
            properties:
              message:
                type: string
